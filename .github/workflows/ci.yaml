name: Application CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'terraform/**'
      - '.github/workflows/ci.yaml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.0

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 5: Get ECR repo URL from Terraform outputs
      - name: Get Terraform Outputs
        id: tf-output
        run: |
          cd terraform
          terraform init -reconfigure
          terraform apply -auto-approve
          ECR_URL=$(terraform output -raw ecr_url)
          CLUSTER_NAME=$(terraform output -raw eks_cluster_name)
          echo "ecr_url=$ECR_URL" >> $GITHUB_ENV
          echo "cluster_name=$CLUSTER_NAME" >> $GITHUB_ENV

      # Step 6: Build and push Docker image
      - name: Build, Tag, and Push image to ECR
        run: |
          IMAGE_TAG=latest
          IMAGE_URI=${{ env.ecr_url }}:$IMAGE_TAG
          docker build -t $IMAGE_URI ./app
          docker push $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> $GITHUB_ENV

      # Step 7: Configure kubectl for EKS
      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name ${{ env.cluster_name }}

      # Step 8: Update Kubernetes deployment manifest with image URI
      - name: Update K8s manifest
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|${{ env.image_uri }}|g" k8s/deployment.yaml

      # Step 9: Deploy to EKS
      - name: Apply manifests to EKS
        run: kubectl apply -f k8s/
        